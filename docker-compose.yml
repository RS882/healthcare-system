services:

  service-registry:
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      EUREKA_HOSTNAME: ${EUREKA_HOSTNAME}
    networks:
      - healthcare-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: on-failure

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      EUREKA: ${EUREKA}
      GIT: ${GIT}
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - healthcare-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: on-failure

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      EUREKA: ${EUREKA}
      CONFIG: ${CONFIG}
    depends_on:
      config-server:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    networks:
      - healthcare-network

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      ACCESS_SECRET: ${ACCESS_SECRET}
      ACCESS_TOKEN_EXPIRATION_MS: ${ACCESS_TOKEN_EXPIRATION_MS}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      BLACKLIST_PREFIX: ${BLACKLIST_PREFIX}
      BLOCKED_PREFIX: ${BLOCKED_PREFIX}
      CONFIG: ${CONFIG}
      COOKIE_PATH: ${COOKIE_PATH}
      EUREKA: ${EUREKA}
      MAX_TOKEN: ${MAX_TOKEN}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REFRESH_PREFIX: ${REFRESH_PREFIX}
      REFRESH_SECRET: ${REFRESH_SECRET}
      REFRESH_TOKEN_EXPIRATION_MS: ${REFRESH_TOKEN_EXPIRATION_MS}
    depends_on:
      redis:
        condition: service_healthy
      config-server:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    networks:
      - healthcare-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      CONFIG: ${CONFIG}
      EUREKA: ${EUREKA}
      DB: ${DB}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
    depends_on:
      config-server:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    networks:
      - healthcare-network

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - healthcare-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

networks:
  healthcare-network:
    driver: bridge
